#!/usr/bin/env node

var versions = require('../package').version;

//引入外部依赖
var map = require('map-stream');
var Commander = require('commander');
//引入lib
var walker = require('../lib/walker');
var detector = require('../lib/detector');
var query = require('../lib/query');

Commander.version(versions);


//入库操作
Commander.command('insertdb')
    .usage('[filename] [options]')
    .description('parser log and insert into database')
    .option('-t, --type [log_type]', 'nginx log type, hijack/badjs/feature')
    .option('-C, --concurrency [number]', 'concurrency')
    .option('-c, --config [filename]', 'config file path')
    .action(function(filename, options) {
        if (typeof filename === 'object') {
            console.log('ERROR: please input filename！');
            this.commands[0].outputHelp()
            return;
        }
        var Parser = require('../lib/insertdb');
        Parser(filename, options || {});

    }).on('--help', function() {
        console.log('  Examples:');
        console.log();
        console.log('  stalker insertdb path/to/log');
        console.log();
    });
//遍历
Commander.command('walk')
    .usage('[filename] [options]')
    .description('traverse a log file')
    .option('-f, --format [nginx_log_format]', 'nginx log format')
    .option('-e, --encoding [utf-8]', 'log file encode')
    .action(function(filename, options) {
        if (typeof filename === 'object') {
            console.log('ERROR: please input filename！');
            this.commands[1].outputHelp()
            return;
        }

        walker(filename, options || {}).pipe(detector).pipe(query).pipe(map(function(data) {
            console.log(data);
        }));

    }).on('--help', function() {
        console.log('  Examples:');
        console.log();
        console.log('  stalker walk path/to/log');
        console.log();
    });
//导出csv格式文件
Commander.command('csv')
    .usage('[filename] [options]')
    .description('parser log and insert into database')
    .option('-t, --type [log_type]', 'nginx log type, hijack/badjs/feature')
    .option('-c, --config [filename]', 'config file path')
    .option('-o, --output [filename]', 'output file name')
    .option('-v, --view ', 'show progress bar')
    .action(function(filename, options) {
        if (typeof filename === 'object') {
            console.log('ERROR: please input filename！');
            this.commands[2].outputHelp()
            return;
        }
        var Parser = require('../lib/csv');
        Parser(filename, options || {});

    }).on('--help', function() {
        console.log('  Examples:');
        console.log();
        console.log('  stalker csv path/to/log');
        console.log();
    });
Commander.parse(process.argv);


if (!Commander.args[0]) {
    process.stdout.write(Commander.helpInformation());
    Commander.emit('--help');
}
